version: "3"

services:
  redis:
    image: redis:7.2-alpine
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"

  webapp:
    build:
      context: .
      dockerfile: src/app/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./src:/app/src
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PYTHONUNBUFFERED=1
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
      - OTEL_EXPORTER_OTLP_INSECURE="true"
      - OTEL_LOGS_EXPORTER=console,otlp
      - OTEL_TRACES_EXPORTER=none
      - OTEL_METRICS_EXPORTER=none
      - SERVICE_NAME=redis-pubsub-101-webapp
    depends_on:
      - redis
      - otel-collector
    networks:
      - default
      - monitoring

  scheduler:
    build:
      context: .
      dockerfile: src/scheduler/Dockerfile
    volumes:
      - ./src:/app/src
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PYTHONUNBUFFERED=1
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
      - OTEL_EXPORTER_OTLP_INSECURE="true"
      - OTEL_LOGS_EXPORTER=console,otlp
      - OTEL_TRACES_EXPORTER=none
      - OTEL_METRICS_EXPORTER=none
      - SERVICE_NAME=redis-pubsub-101-scheduler
    depends_on:
      - redis
    networks:
      - default
      - monitoring

  controller:
    build:
      context: .
      dockerfile: src/controller/Dockerfile
    volumes:
      - ./src:/app/src
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PYTHONUNBUFFERED=1
      - SERVICE_NAME=redis-pubsub-101-controller
    depends_on:
      - redis

  # Jaeger all-in-one for local development
  jaeger:
    image: jaegertracing/all-in-one:1.51
    ports:
      - "16686:16686" # Jaeger UI
      - "14250:14250" # gRPC
    environment:
      COLLECTOR_OTLP_ENABLED: true
      LOG_LEVEL: debug
    networks:
      - monitoring

  # OpenTelemetry Collector (Data Pipeline)
  otel-collector:
    image: otel/opentelemetry-collector:latest
    volumes:
      - ./otel-collector-config.yaml:/etc/otel/config.yaml
    command:
      - "--config=/etc/otel/config.yaml"
    ports:
      - "4317:4317" #grpc
      - "4318:4318" #http
    depends_on:
      - loki
    networks:
      - monitoring

  # LOGS: Loki
  loki:
    image: grafana/loki:main
    ports:
      - "3100:3100"
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:11.6.0
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
      - GF_INSTALL_PLUGINS=grafana-simple-json-datasource
    ports:
      - 3000:3000/tcp
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - monitoring

volumes:
  redis-data:
  prometheus_data:
  grafana_data:
  loki_data:

networks:
  default:
    driver: bridge
  monitoring:
