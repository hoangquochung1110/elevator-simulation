version: "3.9"

services:
  redis:
    image: redis:7.2-alpine
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"

  webapp:
    build:
      context: .
      dockerfile: src/app/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./src:/app/src
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PYTHONUNBUFFERED=1
    depends_on:
      - redis
    command: uvicorn src.app.main:app --host 0.0.0.0 --port 8000 --reload --reload-dir /app/src

  scheduler:
    build:
      context: .
      dockerfile: src/scheduler/Dockerfile
    volumes:
      - ./src:/app/src
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PYTHONUNBUFFERED=1
    depends_on:
      - redis
    command: watchmedo auto-restart --directory=/app/src --pattern=*.py --recursive -- python -m src.scheduler.main

  controller:
    build:
      context: .
      dockerfile: src/controller/Dockerfile
    volumes:
      - ./src:/app/src
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PYTHONUNBUFFERED=1
    depends_on:
      - redis
    command: watchmedo auto-restart --directory=/app/src --pattern=*.py --recursive -- python -m src.controller.main

  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki/loki-config.yml:/etc/loki/local-config.yaml:ro
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - logging
    restart: unless-stopped

  promtail:
    image: grafana/promtail:2.9.0
    container_name: promtail
    volumes:
      - ./promtail/promtail-config.yml:/etc/promtail/config.yml:ro
      # Mount Docker socket and containers (for container logs)
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Mount application logs to a different path to avoid read-only filesystem issues
      - ./logs:/app/logs:ro
      # Optional: system logs (comment out if not needed)
      # - /var/log:/host/var/log:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - logging
    depends_on:
      - loki
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    networks:
      - logging
    depends_on:
      - loki
    restart: unless-stopped

networks:
  logging:
    driver: bridge

volumes:
  loki_data:
  redis-data:
  grafana-storage:
